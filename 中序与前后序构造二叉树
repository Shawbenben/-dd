# -dd
记录每日。
class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int len = inorder.size();
        if(len == 0)    return NULL;
       /* TreeNode* root = new TreeNode;
        root =heaper(inorder,postorder,0,0,len-1,len-1);*/
        return heaper(inorder,postorder,0,0,len-1,len-1);

       
    }

    TreeNode* heaper(vector<int>& in, vector<int>& pos,int head1,int head2,int tail1,int tail2){
        if(head1 > tail1) return NULL;
        int val = pos[tail2--];
        TreeNode* root=new TreeNode(val);
        
        root->left = root->right = NULL;
        if(head1 == tail1)  return root;
        int mid = 0;
        
        for(mid = 0;in[head1+mid]!=val && head1+mid<tail1;mid++);

        root->left = heaper(in,pos,head1,head2,head1+mid-1,head2+mid-1);
        root->right = heaper(in,pos,head1+mid+1,head2+mid,tail1,tail2);
        
     

        return root;
    }
};


class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int len = preorder.size();
        if(len == 0)    return NULL;
        
        return heaper(preorder,inorder,0,len-1,0,len-1);
    }

    TreeNode* heaper(vector<int>& pre,vector<int>& in,int head1,int tail1,int head2, int tail2){
        if(head1>tail1) return NULL;
        int val = pre[head1];
        TreeNode* root = new TreeNode(val);
        if(head1 == tail1)  return root;

        int mid;
        for(mid =0;in[head2+mid]!=val;mid++);

        root->right = heaper(pre,in,head1+mid+1,tail1,head2+mid+1,tail2);
        root->left = heaper(pre,in,head1+1,head1+mid,head2,head2+mid-1);

        return root;
    }
};
